package ${package_name};

import ${servicePackage}.${module}Service;
import org.springframework.beans.factory.annotation.Autowired;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

/**
 * ${module}模块 controller
 * Created by ${author} on ${createtime}.
 */
@Controller
@RequestMapping("/${module}")
public class ${module}Controller{

    private static Logger logger = LoggerFactory.getLogger(${module}Controller.class);

    @Autowired
    private ${module}Service ${model}Service;

    @RequestMapping("/goPage.action")
    public String goPage(){
        return "workflow/${model}/${module}";
    }


    @RequestMapping("/query.action")
    @ResponseBody
    public ActionResult query(${module} ${model}){
        ${module}Example example =new ${module}Example();
        ${module}Example.Criteria criteria = example.createCriteria();
        List<SysRole> rows = ${model}Service.query(example, ${model}.getStart(), ${model}.getLimit());
        Long count = ${model}Service.queryCount(example);
        return new ActionResult<SysRole>(rows,"200",count,${model});
    }


    @RequestMapping("/add.action")
    @ResponseBody
    public ActionResult add(${module} ${model}){
        ${model}.setLastModifyTime(new Date());
        ${model}.setCreateTime(new Date());
        ${model}.setDeleteMark(1L);
        ${model}.setCreatorCode("0001");
        ${model}.setCreatorName("archer");
        ${model}Service.insert(${model});
        return new ActionResult<${module}>("200","新增成功");
    }

    @RequestMapping("/update.action")
    @ResponseBody
    public ActionResult update(SysRole sysRole){
        ${module}Example example =new ${module}Example();
        ${module}Example.Criteria criteria = example.createCriteria();
        criteria.andIdEqualTo(sysRole.getId());
        List<${module}> result = ${model}Service.query(example);
        if (result!=null && result.size()>0){
            ${module} ${model}FromDB = result.get(0);
            BeanUtil.copyPropertiesIgnoreNull(${model},${model}FromDB);
            sysRoleService.update(${model}FromDB);
            return new ActionResult("200","更新成功!");
        }else{
            return new ActionResult("500","更新失败");
        }
    }



}
